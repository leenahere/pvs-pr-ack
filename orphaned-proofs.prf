("pr-ack" pr_ack pr_add_is_addition 0 (pr_add_is_addition-1 nil 3756843440 ("" (expand "pr_add") (("" (expand "pr") (("" (postpone) nil nil)) nil)) nil) nil shostak))("pr-ack" pr_ack sub_args_TCC5 0 (sub_args_TCC5-1 nil 3756843421 ("" (subtype-tcc) nil nil) nil nil))("pr-ack" pr_ack test 0 (test-1 nil 3756888452 ("" (lemma "addition_args") (("" (postpone) nil nil)) nil) nil shostak))("pr-ack" pr_ack pr_TCC6 0 (pr_TCC6-1 nil 3756843421 ("" (termination-tcc) nil nil) nil nil))("pr-ack" pr_ack pr_TCC5 0 (pr_TCC5-1 nil 3756843421 ("" (subtype-tcc) nil nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (>= const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (int_minus_int_is_int application-judgement "int" integers nil) (real_ge_is_total_order name-judgement "(total_order?[real])" real_props nil)) nil))("pr-ack" pr_ack pr_build_h_m_TCC3 0 (pr_build_h_m_TCC3-1 nil 3756843421 ("" (subtype-tcc) nil nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (>= const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (> const-decl "bool" reals nil) (nonneg_int nonempty-type-eq-decl nil integers nil) (posint nonempty-type-eq-decl nil integers nil) (real_ge_is_total_order name-judgement "(total_order?[real])" real_props nil) (real_gt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil) (posint_plus_nnint_is_posint application-judgement "posint" integers nil) (real_lt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil)) nil))("pr-ack" pr_ack pr_build_h_m_TCC2 0 (pr_build_h_m_TCC2-1 nil 3756843421 ("" (subtype-tcc) nil nil) nil nil))("pr-ack" pr_ack pr_build_h_m_TCC1 0 (pr_build_h_m_TCC1-1 nil 3756843421 ("" (subtype-tcc) nil nil) nil nil))("pr-ack" pr_ack expand_args_TCC2 0 (expand_args_TCC2-1 nil 3756843421 ("" (subtype-tcc) nil nil) nil nil))("pr-ack" pr_ack expand_args_TCC1 0 (expand_args_TCC1-1 nil 3756843421 ("" (subtype-tcc) nil nil) nil nil))("pr-ack" pr_ack pr_TCC7 0 (pr_TCC7-1 nil 3757008441 ("" (termination-tcc) nil nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (>= const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (real_lt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil) (int_minus_int_is_int application-judgement "int" integers nil) (real_ge_is_total_order name-judgement "(total_order?[real])" real_props nil)) nil))("pr-ack" pr_ack sub_args_TCC4 0 (sub_args_TCC4-1 nil 3756843421 ("" (subtype-tcc) nil nil) nil nil))("pr-ack" pr_ack sub_args_TCC3 0 (sub_args_TCC3-1 nil 3756843421 ("" (subtype-tcc) nil nil) ((posint_plus_nnint_is_posint application-judgement "posint" integers nil)) nil))("pr-ack" pr_ack sub_args_TCC2 0 (sub_args_TCC2-1 nil 3756843421 ("" (subtype-tcc) nil nil) ((posint_plus_nnint_is_posint application-judgement "posint" integers nil)) nil))("pr-ack" pr_ack sub_args_TCC1 0 (sub_args_TCC1-1 nil 3756843421 ("" (subtype-tcc) nil nil) ((posint_plus_nnint_is_posint application-judgement "posint" integers nil)) nil))("pr-ack" pr_ack comp_build_m_TCC1 0 (comp_build_m_TCC1-1 nil 3757143511 ("" (subtype-tcc) nil nil) nil nil))